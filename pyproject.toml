[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"


[project]
name = "StartYourEngine"
version = "0.1.0"
description = "A short description of your project"
readme = "README.md"
license = { file = "LICENSE" }
authors = [
    { name = "Fabian Lamers", email = "fabian.lamers@capgemini.com" }
]
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
dependencies = [
    "build",
    "pre-commit",
    "pytest",
    "pytest-cookies",
    "ruff",
    "twine",
    "uv",
]

[tool.ruff]
# Exclude a variety of commonly ignored directories.
extend-exclude = [
    "[{][{]cookiecutter.__project_folder_name[}][}]",
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]
# Same as Black.
line-length = 120
indent-width = 4

# Assume Python 3.12
target-version = "py312"

[tool.ruff.lint]
select = ["ALL"]
ignore = ["D203", "D213", "COM812", "ISC001"]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"


[tool.ruff.lint.per-file-ignores]
"**/__init__.py"= ["D104"]
"tests/**"= ["A", "ANN", "D", "PLR2004", "PT", "S101"]
"hooks/post_gen_project.py" = ["PLR0133"]

[tool.mypy]
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
warn_redundant_casts = true
warn_unused_ignores = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

[[tool.mypy.overrides]]
module = "testing.*"
disallow_untyped_defs = false
